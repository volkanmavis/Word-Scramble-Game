{"ast":null,"code":"var _jsxFileName = \"/Users/volkanmavis/Desktop/word-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Start-button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    onPlay: false,\n    inputValue: \"\",\n    message: \"\",\n    correctWord: \"\",\n    scrambledWord: \"\"\n  });\n  const handleButtonClick = () => {\n    const {\n      inputValue,\n      correctWord\n    } = gameState;\n    if (inputValue !== \"\") {\n      const message = correctWord === inputValue ? \"Correct Answer\" : \"Wrong Answer\";\n      setGameState({\n        ...gameState,\n        message\n      });\n    }\n  };\n  const handleInputChange = event => {\n    setGameState({\n      ...gameState,\n      inputValue: event.target.value\n    });\n  };\n  const selectWord = async () => {\n    try {\n      const response = await fetch(`https://random-word-api.herokuapp.com/word`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch word');\n      }\n      const data = await response.json();\n      return data[0];\n    } catch (error) {\n      console.error('Error fetching word:', error);\n    }\n  };\n  const handleStartGame = async () => {\n    const word = await selectWord();\n    const scrambledWord = createScrambledWord(word);\n    setGameState({\n      onPlay: true,\n      inputValue: \"\",\n      message: \"\",\n      correctWord: word,\n      scrambledWord\n    });\n  };\n  const createScrambledWord = word => {\n    const shuffledArray = word.split('').sort(() => Math.random() - 0.5);\n    return shuffledArray.join('');\n  };\n  useEffect(() => {\n    let clearMessage;\n    if (gameState.message === \"Wrong Answer\") {\n      clearMessage = setTimeout(() => setGameState({\n        ...gameState,\n        message: \"\"\n      }), 800);\n    }\n    return () => {\n      if (clearMessage) {\n        clearTimeout(clearMessage);\n      }\n    };\n  }, [gameState.message]);\n  const {\n    onPlay,\n    inputValue,\n    message,\n    correctWord,\n    scrambledWord\n  } = gameState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-app\",\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Welcome to Word App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [onPlay ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board\",\n          children: correctWord.split('').map((el, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"square-bg\",\n            children: inputValue[i]\n          }, `${el}_${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scrambled-word\",\n          children: scrambledWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleInputChange,\n            value: inputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleButtonClick,\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-51\",\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), onPlay && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button-new\",\n        onClick: () => setGameState({\n          ...gameState,\n          onPlay: false\n        }),\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cZpnq1yWlMQA6qFzxAhm/1DPQ4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gameState","setGameState","onPlay","inputValue","message","correctWord","scrambledWord","handleButtonClick","handleInputChange","event","target","value","selectWord","response","fetch","ok","Error","data","json","error","console","handleStartGame","word","createScrambledWord","shuffledArray","split","sort","Math","random","join","clearMessage","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/volkanmavis/Desktop/word-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './Start-button.css'\n\nfunction App() {\n  const [gameState, setGameState] = useState({\n    onPlay: false,\n    inputValue: \"\",\n    message: \"\",\n    correctWord: \"\",\n    scrambledWord: \"\"\n  });\n\n  const handleButtonClick = () => {\n    const { inputValue, correctWord } = gameState;\n    if (inputValue !== \"\") {\n      const message = correctWord === inputValue ? \"Correct Answer\" : \"Wrong Answer\";\n      setGameState({ ...gameState, message });\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setGameState({ ...gameState, inputValue: event.target.value });\n  };\n\n  const selectWord = async () => {\n    try {\n      const response = await fetch(`https://random-word-api.herokuapp.com/word`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch word');\n      }\n      const data = await response.json();\n      return data[0];\n    } catch (error) {\n      console.error('Error fetching word:', error);\n    }\n  };\n\n  const handleStartGame = async () => {\n    const word = await selectWord();\n    const scrambledWord = createScrambledWord(word);\n    setGameState({\n      onPlay: true,\n      inputValue: \"\",\n      message: \"\",\n      correctWord: word,\n      scrambledWord\n    });\n  };\n\n  const createScrambledWord = (word) => {\n    const shuffledArray = word.split('').sort(() => Math.random() - 0.5);\n    return shuffledArray.join('');\n  };\n\n  useEffect(() => {\n    let clearMessage;\n    if (gameState.message === \"Wrong Answer\") {\n      clearMessage = setTimeout(() => setGameState({ ...gameState, message: \"\" }), 800);\n    }\n    return () => {\n      if (clearMessage) {\n        clearTimeout(clearMessage);\n      }\n    };\n  }, [gameState.message]);\n\n  const { onPlay, inputValue, message, correctWord, scrambledWord } = gameState;\n\n  return (\n    <div className='word-app'>\n      {message && \n        <div className='message'>\n          <p>{message}</p>\n        </div>\n      }\n      <h1 className='heading'>Welcome to Word App</h1>\n      <div className='content'>\n        {onPlay ? (\n          <>\n            <div className='board'>\n              {correctWord.split('').map((el, i) => (\n                <span key={`${el}_${i}`} className='square-bg'>{inputValue[i]}</span>\n              ))}\n            </div>\n            <p className='scrambled-word'>{scrambledWord}</p>\n            <div className='field'>\n              <input type=\"text\" onChange={handleInputChange} value={inputValue}/>\n              <button type='button' onClick={handleButtonClick}>Enter</button>\n            </div>\n          </>\n        ) : (\n          <button className='button-51' onClick={handleStartGame}>Start Game</button>\n        )}\n        {onPlay && (\n          <button className='start-button-new' onClick={() => setGameState({ ...gameState, onPlay: false })}>New Game</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,MAAM,EAAE,KAAK;IACbC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAM;MAAEJ,UAAU;MAAEE;IAAY,CAAC,GAAGL,SAAS;IAC7C,IAAIG,UAAU,KAAK,EAAE,EAAE;MACrB,MAAMC,OAAO,GAAGC,WAAW,KAAKF,UAAU,GAAG,gBAAgB,GAAG,cAAc;MAC9EF,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAEI;MAAQ,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEG,UAAU,EAAEM,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2C,CAAC;MAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,IAAI,GAAG,MAAMV,UAAU,CAAC,CAAC;IAC/B,MAAMN,aAAa,GAAGiB,mBAAmB,CAACD,IAAI,CAAC;IAC/CrB,YAAY,CAAC;MACXC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAEiB,IAAI;MACjBhB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMiB,mBAAmB,GAAID,IAAI,IAAK;IACpC,MAAME,aAAa,GAAGF,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACpE,OAAOJ,aAAa,CAACK,IAAI,CAAC,EAAE,CAAC;EAC/B,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,IAAIqC,YAAY;IAChB,IAAI9B,SAAS,CAACI,OAAO,KAAK,cAAc,EAAE;MACxC0B,YAAY,GAAGC,UAAU,CAAC,MAAM9B,YAAY,CAAC;QAAE,GAAGD,SAAS;QAAEI,OAAO,EAAE;MAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACnF;IACA,OAAO,MAAM;MACX,IAAI0B,YAAY,EAAE;QAChBE,YAAY,CAACF,YAAY,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAAC9B,SAAS,CAACI,OAAO,CAAC,CAAC;EAEvB,MAAM;IAAEF,MAAM;IAAEC,UAAU;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAGN,SAAS;EAE7E,oBACEL,OAAA;IAAKsC,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtB9B,OAAO,iBACNT,OAAA;MAAKsC,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBvC,OAAA;QAAAuC,QAAA,EAAI9B;MAAO;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAER3C,OAAA;MAAIsC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChD3C,OAAA;MAAKsC,SAAS,EAAC,SAAS;MAAAC,QAAA,GACrBhC,MAAM,gBACLP,OAAA,CAAAE,SAAA;QAAAqC,QAAA,gBACEvC,OAAA;UAAKsC,SAAS,EAAC,OAAO;UAAAC,QAAA,EACnB7B,WAAW,CAACoB,KAAK,CAAC,EAAE,CAAC,CAACc,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBAC/B9C,OAAA;YAAyBsC,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAE/B,UAAU,CAACsC,CAAC;UAAC,GAAjD,GAAED,EAAG,IAAGC,CAAE,EAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6C,CACrE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN3C,OAAA;UAAGsC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE5B;QAAa;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD3C,OAAA;UAAKsC,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBvC,OAAA;YAAO+C,IAAI,EAAC,MAAM;YAACC,QAAQ,EAAEnC,iBAAkB;YAACG,KAAK,EAAER;UAAW;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACpE3C,OAAA;YAAQ+C,IAAI,EAAC,QAAQ;YAACE,OAAO,EAAErC,iBAAkB;YAAA2B,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA,eACN,CAAC,gBAEH3C,OAAA;QAAQsC,SAAS,EAAC,WAAW;QAACW,OAAO,EAAEvB,eAAgB;QAAAa,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC3E,EACApC,MAAM,iBACLP,OAAA;QAAQsC,SAAS,EAAC,kBAAkB;QAACW,OAAO,EAAEA,CAAA,KAAM3C,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEE,MAAM,EAAE;QAAM,CAAC,CAAE;QAAAgC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACpH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvC,EAAA,CAhGQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAkGZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}